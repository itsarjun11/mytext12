{"version":3,"sources":["componants/About.js","componants/Navbar.js","componants/TextForm.js","componants/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","className","style","id","type","Navbar","to","title","xmlns","width","height","fill","class","viewBox","d","onClick","toggleMode","cursor","Textform","useState","text","setText","heading","value","onChange","event","console","log","target","rows","placeholder","disabled","length","newText","toUpperCase","showAlert","toLowerCase","Text","split","reverseText","reverse","toString","replaceAll","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","fillRule","filter","element","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","add","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9f6bad3b.chunk.js","sourcesContent":["\r\n\r\n\r\nexport default function About(props) {\r\n\r\n    \r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    let myStyle = {\r\n        color :props.mode === 'dark'? 'white':'#042844',\r\n        backgroundColor: props.mode==='dark'?'rgb(36 74 104)':'white',\r\n        border:'2px solid',\r\n        borderColor : props.mode==='dark'? 'white':'#042844'\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container\"  style={{color :props.mode === 'dark'? 'white':'#042844'}}>\r\n            <h1 className=\"my-2 pb-2\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n            {/* <div className=\"form-check form-switch  mb-2 my-3  pb-2 pr-1\"style={myStyle}>\r\n                <input className=\"form-check-input\" onClick={toggleStyle} type=\"checkbox\" id=\"flexSwitchCheckChecked\"/>\r\n                <label className=\"form-check-label\" >{btntext}</label>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"App fs-5\">\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand fw-bolder fs-4\" to=\"#\">{props.title} <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                    </svg></Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About us</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"d-flex\">\r\n\r\n                            <div className=\"bg-info rounded mx-2 \" onClick={() => { props.toggleMode('') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }}></div>\r\n                            <div className=\"bg-danger rounded mx-2\" onClick={() => { props.toggleMode('danger') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }}></div>\r\n                            <div className=\"bg-success rounded mx-2\" onClick={() => { props.toggleMode('success') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }}></div>\r\n                            <div className=\"bg-warning rounded mx-2\" onClick={() => { props.toggleMode('warning') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }}></div>\r\n                            <div className=\"bg-secondary rounded mx-2\" onClick={() => { props.toggleMode('secondary') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }}></div>\r\n                            <div className=\"bg-light rounded mx-2\" onClick={() => { props.toggleMode('light') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }}></div>\r\n                        </div>\r\n                        {/* <div className=\" form-check form-switch  mx-1 fw-bolder\">\r\n                            <input className=\"form-check-input\" onClick={()=>{props.toggleMode(null)}} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className={`form-check-lable text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div> */}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            <h1 className={`bg-secondary  container-fluid text-${props.mode === 'light' ? 'dark' : 'light'} text-center  bg-${props.mode}`}>Welcome to <b className=\"display-4\">TextUtils  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"1 1 18 17\">\r\n                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n            </svg></b></h1>\r\n\r\n\r\n            {/* <hr/> */}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    // aboutText:PropTypes.string\r\n}","import React, { useState } from 'react'\r\n// import './app.css'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked\"+ text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"  Convert to uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"LowerCase was clicked\"+ text); \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"  Convert to lowercase\", \"success\");\r\n\r\n    }\r\n    const handleclearClick = () => {\r\n        let newText = ('');\r\n        setText(newText)\r\n        props.showAlert(\"  Clear All\", \"warning\");\r\n\r\n    }\r\n    const handleReverseText = () => {\r\n        // console.log(\"Warning your data can be revesed .But don't worry because you can again reverse it to get the correct data.Thank you for using this function.\");\r\n        const Text = text.split(\"\");\r\n        let reverseText = Text.reverse().toString().replaceAll(\",\", \"\");\r\n\r\n\r\n        console.log(Text.reverse().toString().replaceAll(\",\", \"\"));\r\n        setText(reverseText)      \r\n        props.showAlert(\"  Your data can be revesed .But don't worry because you can again reverse it to get the correct data.\", \"warning\");\r\n\r\n    }\r\n    // const download = (filename, text) => {\r\n    //     var element = document.createElement('a');\r\n    //     element.setAttribute('href', 'data:text/plain; charset=utf-8,' + encodeURIComponent(text));\r\n    //     element.setAttribute('download', filename);\r\n    //     element.style.display = 'none';\r\n    //     document.body.appendChild(element);\r\n    //     element.click();\r\n    //     document.body.removeChild(element);\r\n    //     props.showAlert(\"  Dowload start\", \"success\");\r\n\r\n    // }\r\n  \r\n\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"  Copy to clipbordS\", \"success\");\r\n        \r\n\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"uppercase was clicked\");\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`container p-4 mt-4 !important `}>\r\n            \r\n                <h2 className={`display-4 pb-2 text-${props.mode === 'light' ? 'dark' : 'light'} `} style={{color :props.mode === 'dark'? 'white':'#042844'}}>{props.heading}</h2>\r\n                {/* <hr /> */}\r\n\r\n\r\n\r\n                <div className=\"mb-3  text-danger bg-danger\" >\r\n\r\n                    <textarea className={`text-break fs-3 bg-${props.mode === 'dark' ? 'secondary' : 'light'} text-${props.mode === 'light' ? 'dark' : 'light'} form-control`} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"7\" placeholder=\"Enter  Something \"></textarea>\r\n                </div>\r\n                <div className=\"container m-2 p-2 opacity-100 \">\r\n                    <button  disabled={text.length===0}className=\"rounded btn btn-primary  m-2 p-2 \" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary m-2 p-2 \" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary m-2 p-2 \" onClick={handleReverseText}>Reverse</button>\r\n\r\n                    <button disabled={text.length===0} className=\"btn btn-primary m-2 p-2 \" onClick={handleCopy}>Copy <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-clipboard-check\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M10.854 7.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708 0z\" />\r\n                        <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\r\n                        <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\r\n                    </svg></button>\r\n                    <button  disabled={text.length===0}className=\"btn btn-primary m-2 p-2 bg-danger \" onClick={handleclearClick}>Delete <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                    </svg></button>\r\n\r\n\r\n\r\n\r\n                    {/* <button className=\"btn btn-primary m-2 p-2 \" id=\"dwn-btn\"  onClick={download}>Download file</button> */}\r\n\r\n\r\n                </div>\r\n\r\n                <div className={`border border-dark display-6 container m-1  p-2 text-${props.mode === 'light' ? 'dark' : 'light'}`} >\r\n                    <div className=\"display-6\">\r\n                        <h3 className=\"display-6 fsw-itallic\">Text Summary</h3>\r\n                        <hr/> \r\n                        <h5>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words And {text.length} characters</h5>\r\n                        <h6>{0.008 * text.length} Minutes to Read</h6>\r\n                    </div>\r\n\r\n              \r\n\r\n                </div>\r\n                <div className={`fs-4  m-1 text-break    container p-2 text-${props.mode === 'light' ? 'dark' : 'light'}`} >\r\n                <h3 className=\" display-6\" > Preview Here</h3>\r\n                <hr />\r\n                <p className=\"\">{text.length > 0 ? text : \"Nothing! to preview\"}</p>\r\n            </div>\r\n            </div>\r\n           \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './componants/About';\nimport Navbar from './componants/Navbar';\nimport Textform from './componants/TextForm'\nimport React, { useState } from 'react'\nimport Alert from './componants/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\n\n\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');    //whether dark mode is enaable or not//\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n\n\n  }\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-info');\n    document.body.classList.remove('bg-secondary');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-light');\n\n  }\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    document.body.classList.add('bg-' + cls);\n  \n  if (mode === 'light') {\n    setMode('dark')\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark Mode is enabled\", \"success\")\n    // document.title =\"TextUtils - Dark \"\n  }\n  else {\n    setMode('light')\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light Mode is enabled\", \"success\")\n    // document.title =\"TextUtils - Light\"\n\n  }\n  }\n  \n\n  return (\n\n    <>\n      <Router>\n        <Navbar title=\"TextUtiles\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n\n        <div className=\"container\">\n\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <Textform showAlert={showAlert} heading=\"Analyze for upperCase/lowerCase\" mode={mode} />\n            </Route>\n          </Switch>\n          {/* <Textform showAlert= {showAlert}   heading=\"Analyze for upperCase/lowerCase\" mode={mode}/> */}\n\n        </div>\n      </Router>\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}