{"ast":null,"code":"var _jsxFileName = \"D:\\\\react1\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport About from './componants/About';\nimport Navbar from './componants/Navbar';\nimport Textform from './componants/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './componants/Alert';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); //whether dark mode is enaable or not//\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2500);\n  };\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n  };\n\n  const toggleMode = cls => {\n    removeBodyClasses();\n    document.body.classList.add('bg-' + cls);\n  };\n\n  if (mode === 'light') {\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark Mode is enabled\", \"success\"); // document.title =\"TextUtils - Dark \"\n  } else {\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light Mode is enabled\", \"success\"); // document.title =\"TextUtils - Light\"\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtiles\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Textform, {\n              showAlert: showAlert,\n              heading: \"Analyze for upperCase/lowerCase\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react1/my-app/src/App.js"],"names":["About","Navbar","Textform","React","useState","Alert","BrowserRouter","Router","Switch","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","removeBodyClasses","document","body","classList","remove","toggleMode","cls","add","style","backgroundColor"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;;AAUA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,OAAD,CAAhC,CAFa,CAEiC;;AAC9C,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMW,SAAS,GAAE,CAACC,OAAD,EAAUC,IAAV,KAAiB;AAChCH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAACF,OADG;AAEPC,MAAAA,IAAI,EAACA;AAFE,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAKD,GAVD;;AAYF,QAAMM,iBAAiB,GAAG,MAAM;AAC9BC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,UAA/B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,SAA/B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,YAA/B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,WAA/B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,YAA/B;AAED,GAPD;;AASE,QAAMC,UAAU,GAAKC,GAAD,IAAS;AAC3BN,IAAAA,iBAAiB;AACjBC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBI,GAAxB,CAA4B,QAAMD,GAAlC;AACD,GAHD;;AAIE,MAAGf,IAAI,KAAG,OAAV,EAAkB;AAClBC,IAAAA,OAAO,CAAC,MAAD,CAAP;AACAS,IAAAA,QAAQ,CAACC,IAAT,CAAcM,KAAd,CAAoBC,eAApB,GAAoC,SAApC;AACAd,IAAAA,SAAS,CAAC,sBAAD,EAAyB,SAAzB,CAAT,CAHkB,CAIlB;AACD,GALC,MAME;AACFH,IAAAA,OAAO,CAAC,OAAD,CAAP;AACAS,IAAAA,QAAQ,CAACC,IAAT,CAAcM,KAAd,CAAoBC,eAApB,GAAoC,OAApC;AACAd,IAAAA,SAAS,CAAC,uBAAD,EAA0B,SAA1B,CAAT,CAHE,CAIF;AAID;;AAEF,sBAED;AAAA,2BACA,QAAC,MAAD;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,IAAI,EAAEJ,IAAjC;AAAuC,QAAA,UAAU,EAAEc;AAAnD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BAEA,QAAC,MAAD;AAAA,kCACU,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAAA,mCACA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEF;AAAb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADV,eAIU,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,mCACA,QAAC,QAAD;AAAU,cAAA,SAAS,EAAGI,SAAtB;AAAmC,cAAA,OAAO,EAAE,iCAA5C;AAA8E,cAAA,IAAI,EAAEJ;AAApF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBAFC;AAwBA;;GAtEQD,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport About from './componants/About';\nimport Navbar from './componants/Navbar';\nimport Textform from './componants/TextForm'\nimport React, { useState } from 'react'\nimport Alert from './componants/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');    //whether dark mode is enaable or not//\n  const [alert, setAlert] = useState(null);\n\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2500);\n\n\n  }\n\nconst removeBodyClasses = () => {\n  document.body.classList.remove('bg-light');\n  document.body.classList.remove('bg-dark');\n  document.body.classList.remove('bg-warning');\n  document.body.classList.remove('bg-danger');\n  document.body.classList.remove('bg-success');\n\n}\n\n  const toggleMode  = (cls) => {\n    removeBodyClasses();\n    document.body.classList.add('bg-'+cls);\n  }\n    if(mode==='light'){ \n    setMode('dark')\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"Dark Mode is enabled\", \"success\")\n    // document.title =\"TextUtils - Dark \"\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light Mode is enabled\", \"success\")\n    // document.title =\"TextUtils - Light\"\n\n\n\n  }\n\n return (\n  \n<>\n<Router>\n<Navbar title=\"TextUtiles\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n \n<div className=\"container\">\n\n<Switch>\n          <Route exact path=\"/about\">\n          <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n          <Textform showAlert= {showAlert}   heading =\"Analyze for upperCase/lowerCase\" mode={mode}/>\n          </Route>\n</Switch>\n{/* <Textform showAlert= {showAlert}   heading=\"Analyze for upperCase/lowerCase\" mode={mode}/> */}\n\n</div>\n </Router>\n</>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}